/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tienda;

import java.io.*;
import java.text.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.parser.DateParser.DAY;

/**
 *
 * @author Sergio
 */
public class VistaPrincipal extends javax.swing.JFrame {
    Producto producto1;
    /**
     * Creates new form VistaPrincipal
     */
    private DefaultTableModel modelo;
    public VistaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        generarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogEscribir = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        dialogLeer = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        btnAbrirArchivo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        labelArchivo = new javax.swing.JLabel();
        toJson = new javax.swing.JButton();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnEscribirArchivo = new javax.swing.JButton();

        dialogEscribir.setTitle("Escribir archivo");
        dialogEscribir.setMinimumSize(new java.awt.Dimension(500, 350));
        dialogEscribir.setModal(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Stock");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Precio");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Fecha entrada");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("AÃ±adir producto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Guardar Archivo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jSpinner1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });

        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##.##"))));
        jFormattedTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout dialogEscribirLayout = new javax.swing.GroupLayout(dialogEscribir.getContentPane());
        dialogEscribir.getContentPane().setLayout(dialogEscribirLayout);
        dialogEscribirLayout.setHorizontalGroup(
            dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogEscribirLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogEscribirLayout.createSequentialGroup()
                        .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogEscribirLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogEscribirLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))))
        );
        dialogEscribirLayout.setVerticalGroup(
            dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogEscribirLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(dialogEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(248, Short.MAX_VALUE))
        );

        dialogLeer.setTitle("Leer Archivo");
        dialogLeer.setMinimumSize(new java.awt.Dimension(941, 481));
        dialogLeer.setModal(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Ruta archivo: ");

        btnAbrirArchivo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAbrirArchivo.setText("Seleccionar archivo");
        btnAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirArchivoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        labelArchivo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        toJson.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        toJson.setText("JSON");
        toJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toJsonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogLeerLayout = new javax.swing.GroupLayout(dialogLeer.getContentPane());
        dialogLeer.getContentPane().setLayout(dialogLeerLayout);
        dialogLeerLayout.setHorizontalGroup(
            dialogLeerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogLeerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogLeerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogLeerLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(dialogLeerLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toJson, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAbrirArchivo)
                        .addGap(96, 96, 96))))
        );
        dialogLeerLayout.setVerticalGroup(
            dialogLeerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogLeerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogLeerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAbrirArchivo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelArchivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toJson, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Escritura y lectura de archivo");
        setResizable(false);

        jPanel1.setToolTipText("");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Escribir archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnEscribirArchivo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEscribirArchivo.setText("Leer Archivo");
        btnEscribirArchivo.setMinimumSize(new java.awt.Dimension(151, 31));
        btnEscribirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscribirArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(131, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(84, 84, 84)
                .addComponent(btnEscribirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnEscribirArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEscribirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscribirArchivoActionPerformed
        // Posicionar dialog en centro y lo hace visible visible
        dialogLeer.setLocationRelativeTo(this);
        dialogLeer.setVisible(true);
        
    }//GEN-LAST:event_btnEscribirArchivoActionPerformed
    
    private void btnAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirArchivoActionPerformed
        // Al pulsar el boton abre el selector de archivos para elegirlo e introducirlo en la tabla
        leerFichero();
    }//GEN-LAST:event_btnAbrirArchivoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Posicionar dialog en centro y lo hace visible visible
        dialogEscribir.setLocationRelativeTo(this);
        dialogEscribir.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Boton que guarda un producto dentro del array de tipo producto al pulsar el boton
        try {
            guardarArchivo();
        } catch (IOException | ParseException ex) {
            Logger.getLogger(VistaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Cuando se pulsa el boton guardar archivo
        try {
            guardarFichero();
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void toJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toJsonActionPerformed
        try {
            convertirJSON();
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_toJsonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VistaPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirArchivo;
    private javax.swing.JButton btnEscribirArchivo;
    private javax.swing.JDialog dialogEscribir;
    private javax.swing.JDialog dialogLeer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel labelArchivo;
    private javax.swing.JButton toJson;
    // End of variables declaration//GEN-END:variables

        //Se declara el arrayList fuera del metodo para que sea global.
    static ArrayList<Producto> producto = new ArrayList();
    public void guardarArchivo() throws IOException, ParseException{ 
        //Codigo que se ejecuta al pulsar el boton de Guardar archivo
        String nombre = jTextField1.getText();
        //Se coge el valor y se convierte el contenido del jSpinner1 en String
        String stock = jSpinner1.getValue().toString();
        String precio = jFormattedTextField2.getText();
        //Asignamos un formato de fecha para poder trabajar con esta.
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        
        //Se comprueba que los campos contienen informacion correcta.
        if (nombre.isEmpty())
            //Si no se ha escrito nada en el campo del nombre
            JOptionPane.showMessageDialog(null, "Debe rellenar nombre");
        else if(Integer.parseInt(stock) <= 0)
            //Si el stock es menor o igual que 0
            JOptionPane.showMessageDialog(null, "Introduzca stock mayor de 0");
        else if(precio.isEmpty() || Double.parseDouble(precio) <= 0)
            //Si el campo precio esta vacio y si es menor o igual a 0
            JOptionPane.showMessageDialog(null, "Introduzca precio mayor de 0 o valor correcto");
        else if(jFormattedTextField1.getValue() ==null || !isValidDate(jFormattedTextField1.getText())){
            //Si la fecha estÃ¡ vacÃ­a, parcialmente vacÃ­a o la fecha introducida no existe
            JOptionPane.showMessageDialog(null, "Introduca una fecha correcta");
        }else if(comprobarNombre(nombre))
            //Comprueba que el nombre no se ha introducido anteriormente.
            JOptionPane.showMessageDialog(null, "El nombre del producto ya existe");  
        else{
            try{
                //AÃ±ade el producto al arrayList y limpia los campos para introducir mas productos
                producto.add( new Producto(nombre,Integer.parseInt(stock),Double.parseDouble(jFormattedTextField2.getText()),formato.parse(jFormattedTextField1.getText())));
                limpiarCampos();
            }catch(ParseException ex){
                JOptionPane.showMessageDialog(null, "Introduca una fecha correcta");
            }
        } 
    }
    
    // Comprobar nombre del producto a introducir con el nombre de los productos guardados
    private boolean comprobarNombre(String nombre){
        for(int i=0;i<producto.size();i++){
            if(producto.get(i).getNombre().equals(nombre))
                return true;
        }
        return false;
    }
    
    //Limpiar campos de texto
    private void limpiarCampos(){
        jTextField1.setText("");
        jSpinner1.setValue(0);
        jFormattedTextField2.setText("");
        jFormattedTextField1.setValue("");
    }
    
    //Cuando se pulsa boton de guardar en fichero:
    private void guardarFichero() throws FileNotFoundException, IOException{
        //Indicamos la ruta donde se va a guardar. 
        File rutaGuardado = new File("objeto.dat");
        ObjectOutputStream streamObj;
        try (FileOutputStream stream = new FileOutputStream(rutaGuardado)) {
            streamObj = new ObjectOutputStream(stream);
            for(int y = 0;y<producto.size();y++){
                streamObj.writeObject(producto.get(y));
        }
        JOptionPane.showMessageDialog(null, "Se ha creado el archivo correctamente");
        }
        streamObj.close();
        producto.clear();
        limpiarCampos();
    }
    
    // Leer fichero objetos
    // Selecciona fichero mediante JFileChooser e introduce los valores de cada objeto del fichero en el lugar correspondiente de la tabla.
    // En la parte del cath controla las exccepciones que los objetos del archivo sean del tipo de nuestra clase que queremos leer y que sea
    // un archivo compatible.
    File archivo;
    private void leerFichero(){
        
        SimpleDateFormat format1 = new SimpleDateFormat("dd/MM/yyyy");        
        modelo.setRowCount(0);
        
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        
        this.archivo = chooser.getSelectedFile();
        if(archivo!= null){
            try{
                FileInputStream fis = new FileInputStream(archivo); 
                ObjectInputStream oos = new ObjectInputStream(fis);
                producto1 = (Producto) oos.readObject();
                labelArchivo.setText(archivo.getAbsolutePath());
                int i= 0;
                while(producto1 !=null){
                    aÃ±adirFila();
                    jTable1.setValueAt(producto1.getNombre(), i, 0);
                    jTable1.setValueAt(producto1.getPrecio(), i, 1);
                    jTable1.setValueAt(producto1.getStock(), i, 2);
                    jTable1.setValueAt(format1.format(producto1.getFecha()), i, 3);
                    producto1 = (Producto) oos.readObject();
                    i++;
                }
                fis.close();
                oos.close();
            }catch(ClassNotFoundException ex){
                JOptionPane.showMessageDialog(null, "El archivo es incompatible con nuestra clase");
                labelArchivo.setText("");
            }catch(EOFException ex){
                
            }catch(IOException ex){
                JOptionPane.showMessageDialog(null, "El archivo es incorrecto");
                labelArchivo.setText("");
            }
        }else
            JOptionPane.showMessageDialog(null, "No has seleccionado nigÃºn archivo");

    }
    
    // Crea un DefaultModel() en la variable modelo, aÃ±ade el nombre de las columnas y pone la tabla para que no se pueda editar
    private void generarTabla(){
        modelo = new DefaultTableModel();
        jTable1.setModel(modelo);
        modelo.addColumn("Nombre");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        modelo.addColumn("Fecha");
        jTable1.setEnabled(false);
    }
    
    //AÃ±ade una fila a la tabla
    public void aÃ±adirFila(){
        Object[] columnas = new Object[4];
        modelo.addRow(columnas);
    }
    

    //Comprueba que la fecha introducida en el campo es facil.

    private static boolean isValidDate(String input) {
        
        String formatString = "dd/MM/yyyy";

        try {
            SimpleDateFormat format = new SimpleDateFormat(formatString);
            format.setLenient(false);
            format.parse(input);
        } catch (ParseException | IllegalArgumentException e) {
            return false;
        }

        return true;
    }
    private void convertirJSON() throws FileNotFoundException, IOException{
        try{
            JFileChooser chooser2 = new JFileChooser();
            chooser2.showOpenDialog(null);
            SimpleDateFormat formatoF = new SimpleDateFormat("dd/MM/yyyy");
            FileOutputStream fos = new FileOutputStream(chooser2.getSelectedFile().getAbsolutePath());
            FileInputStream fis = new FileInputStream(archivo);
            ObjectInputStream ois = new ObjectInputStream(fis);
            
            FileWriter fw = new FileWriter(chooser2.getSelectedFile());
            producto1 = (Producto) ois.readObject();
            int flag=0;
            fw.write("{\"productos\":[");
            while(flag==0){
                fw.write(   "{\"nombre\": " + "\"" + producto1.getNombre()+ "\"" +
                                ",\"stock\": " + "\"" + producto1.getStock()+ "\"" +
                                ",\"precio\":" + "\"" + producto1.getPrecio()+ "\"" +
                                ",\"fecha\":"  + "\"" + formatoF.format(producto1.getFecha()) + "\"}");
                try{
                    producto1 = (Producto) ois.readObject();
                    fw.write(",");
                    }
                catch (IOException ex){
                    fw.write("]}");
                    flag=1;
                }
            }
            fw.close();
            fos.close();
            }
        catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, "Archivo no encontrado.");
        }
        catch(IOException ex){
            JOptionPane.showMessageDialog(null, "Error grave. Borrando sistema operativo");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Clase incorrecta.");
        }
            
        
        
    }
}
